<style lang="less" scoped>
  .item {
    width: 100%;
    padding-top: 15rpx;
    padding-left: 50rpx;
    padding-bottom: 25rpx;
    background-color: white;
     margin-bottom: 20rpx;
     animation: fadeIn .8s;
    //  animation-delay:
    .item_header{
      width: 90%;
      padding-bottom: 15rpx;
      border-bottom: 1px solid #eee;
      margin-bottom: 15rpx;
      h2 {
        font-size: 40rpx;
        margin-right: 10rpx;
      }
      span {
        font-size: 25rpx;
        color: #ababab;
      }
    }
    .photo_wrapper{
      display: flex;
      position: relative;
      image {
        width: 150rpx;
        height:150rpx;
        margin-right: 30rpx;
      }
      .more {
        width:150rpx;
        height: 150rpx;
        position: absolute;
        left: 540rpx;
        line-height: 150rpx;
        text-align: center;
        text-decoration:underline;
        color:white;
        font-size: 30rpx;
        border-bottom: 1px solid #eee;
        background-color: rgba(0,0,0,.3)
      }

    }
  }
@keyframes fadeIn{
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
</style>

<template>
  <view class="container">
    <view class="item" style="animation-delay:0s">
      <view class="item_header">
        <h2>xxxx</h2>
        <span>(3 photos)</span>
      </view>
      <view class="photo_wrapper">
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill">111</image>

          <view class="more">More</view>        
      </view>
    </view>
    <view class="item" style="animation-delay:.5s">
      <view class="item_header">
        <h2>xxxx</h2>
        <span>(3 photos)</span>
      </view>
      <view class="photo_wrapper">
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill">111</image>

          <view class="more">More</view>        
      </view>
    </view>
    <view class="item" style="animation-delay:1s">
      <view class="item_header">
        <h2>xxxx</h2>
        <span>(3 photos)</span>
      </view>
      <view class="photo_wrapper">
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill"></image>
          <image src="../../assests/images/bg.jpg" mode="aspectFill">111</image>

          <view class="more">More</view>        
      </view>
    </view>

  </view>
</template>

<script>
import wepy from 'wepy';

export default class Album extends wepy.page {
  config = {
    navigationBarTitleText: '相册'
  };

  customData = {}; // 自定义数据

  customFunction() {} //自定义方法

  onLoad() {} // 在Page和Component共用的生命周期函数

  onShow() {} // 只在Page中存在的页面生命周期函数

  config = {}; // 只在Page实例中存在的配置数据，对应于原生的page.json文件

  data = {}; // 页面所需数据均需在这里声明，可用于模板数据绑定

  components = {}; // 声明页面中所引用的组件，或声明组件中所引用的子组件

  mixins = []; // 声明页面所引用的Mixin实例

  computed = {}; // 声明计算属性（详见后文介绍）

  watch = {}; // 声明数据watcher（详见后文介绍）

  methods = {}; // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明

  events = {}; // 声明组件之间的事件处理函数
}
</script>
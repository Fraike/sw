<style lang="less" scoped>
.wrapper {
    height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  overflow: hidden;
}
.content_wrapper {
    width: 100%;
    background-color: white;
    margin-top: 10rpx;
    padding-top: 10rpx;
    padding-left:50rpx;
    padding-bottom: 20rpx;
    overflow: hidden;
    textarea {
        font-size: 30rpx;
    }
    .image_container {
        display: flex;
        align-items: center;
        // justify-content: space-between;
        flex-wrap: wrap;
        .image_btn {
        width:  211rpx;
        height: 211rpx;
        margin-top: -18rpx;
        // margin-left: 20rpx;
        border: 6rpx solid #eee;
        display: flex;
        justify-content: center;
        align-items: center;
            image{
                width: 40%;
                height: 40%;
            }
        }
        .image_item{
            width: 223rpx;
            height: 223rpx;
            margin-right: 20rpx;
            margin-bottom: 20rpx;
            position: relative;
            .image{
                width: 100%;
                height: 100%;
            }
            .delete_btn {
                width: 60rpx;
                height: 60rpx;
                position: absolute;
                top: 15rpx;
                right: 15rpx;
                z-index: 99;
            }
        }
        .image_item:nth-child(3n){
        margin-right: none;
        }
    }
}

.date_picker {
    width: 100%;
    margin-top: 20rpx;
    // padding: 10rpx;
    padding-top: 15rpx;
    padding-left: 50rpx;
    padding-bottom: 15rpx;
    background-color: white;
    .picker {
        font-size: 30rpx;
    }
    .date_text {
        float: right;
        margin-right: 80rpx;
    }
}
</style>

<template>
  <view class="wrapper">
        <view class="content_wrapper">
          <textarea class="text" placeholder="写下你想说的吧（选填）"></textarea>
          <view class="image_container">
            <block wx:if="{{images.length>0}}" wx:for="{{images}}" wx:key="{{index}}">
                <view class="image_item">
                    <image  class="image" src="{{item}}"  mode="aspectFil" @tap="previewImage(index)"></image>
                    <image class="delete_btn" src="../../assests/images/delete.png" @tap="deleteImage(index)"></image>
                </view>
            </block>
            <view class="image_btn" @tap="chooseImage" wx:if="{{images.length <9}}">
                <image src="../../assests/images/plus.png" mode="aspectFit"></image>
            </view>
          </view>
        </view>
        <view class="date_picker">
            <picker
                mode="date"
                value="{{date}}"
                start="2015-09-01"
                end="2017-09-01"
                bindchange="bindDateChange"
            >
                <view class="picker">
                发生时间: <view class="date_text">{{date}}</view>
                </view>
            </picker>
        </view>
    
  </view>
</template>

<script>
import wepy from 'wepy';

export default class Write extends wepy.page {
  config = {
    navigationBarTitleText: '上传'
  };

  customData = {}; // 自定义数据

  customFunction() {} //自定义方法

  onLoad() {
      console.log(this.images instanceof Object)
  } // 在Page和Component共用的生命周期函数

  onShow() {} // 只在Page中存在的页面生命周期函数

  config = {}; // 只在Page实例中存在的配置数据，对应于原生的page.json文件

  data = {
      images: [],
      date:  new Date().toLocaleString()
  }; // 页面所需数据均需在这里声明，可用于模板数据绑定

  components = {}; // 声明页面中所引用的组件，或声明组件中所引用的子组件


  computed = {}; // 声明计算属性（详见后文介绍）

  watch = {}; // 声明数据watcher（详见后文介绍）

  methods = {
      chooseImage(){
          let self = this;
          wx.chooseImage({
              count:9,
              sizeType: ['original', 'compressed'],
              sourceType: ['album', 'camera'],
              success:function(res){
                self.images = self.images.concat(res.tempFilePaths)
                self.$apply()
              },
              complete:function(e){
                 
              }
          })
      },
      previewImage(index){
           wx.previewImage({
                    current: this.images[index],  //当前预览的图片
                    urls: this.images,  //所有要预览的图片
                    })
      },
      deleteImage(index){
           this.images.splice(index, 1)
      },
       bindDateChange(e) {
           console.log(e)
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.date = e.detail.value
        // this.setData({
        // date: e.detail.value
        // })
  },
  }; // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明

  events = {}; // 声明组件之间的事件处理函数
}
</script>
<style lang="less" scoped>
.img_item {
  width: 48vw;
  margin: 1%;
  display: inline-block;
  vertical-align: top;
}

</style>

<template>
  <view class="container">
    <view style="display:none">
      <image
        wx:for="{{images}}"
        wx:key="id"
        id="{{item.id}}"
        src="{{item.pic}}"
        bindload="onImageLoad"
      />
    </view>
    <scroll-view scroll-y="true" style="height:{{scrollH}}px">
      <view style="width:100%">
        <view class="img_item">
          <view wx:for="{{col1}}" wx:key="id">
            <image src="{{item.pic}}"  @tap="prviewImage({{item.pic}})" style="width:100%;height:{{item.height}}px">
          </view>
        </view>
        <view class="img_item">
          <view wx:for="{{col2}}" wx:key="id">
            <image src="{{item.pic}}"  @tap="prviewImage({{item.pic}})" style="width:100%;height:{{item.height}}px">
          </view>
        </view>
      </view>
    </scroll-view>
  </view>
</template>

<script>
import wepy from 'wepy';
import regeneratorRuntime from '../../regenerator-runtime/runtime.js';

let col1H = 0;
let col2H = 0;


export default class Gallery extends wepy.page {
  config = {
    navigationBarTitleText: '画廊'
  };

  async onLoad(options) {
    // console.log(options)
    
      let self =this;
     

      await wx.request({
      url: 'http://localhost:3035/getGalleryList', // 仅为示例，并非真实的接口地址
      method: 'post',
      data: {albumName: options.id},
      header: {
        'content-type': 'application/json' // 默认值
      },
      success(res) {
        console.log(res)
        if(res.data.code == 0){
          let resData;
          self.imgList = res.data.data.map((item,index)=>{
            return {height:0,pic:item+'?imageView2/0/q/75|imageslim'}
          })
          self.$apply()
          wx.getSystemInfo({
            success: (res) => {
                let ww = res.windowWidth;
                let wh = res.windowHeight;
                let imgWidth = ww * 0.48;
                let scrollH = wh;
                self.scrollH = scrollH;
                self.imgWidth = imgWidth;
                self.loadImages()
            }
          })
          // console.log(self.imgList)
        }else{
          wx.showToast({
            icon: 'none',
            title: '亲爱的，服务器好像开小差了'
          })
        }
      }
    });




  } // 在Page和Component共用的生命周期函数
  data = {
        scrollH: 0,
        imgWidth: 0,
        loadingCount: 0,
        images: [],
        col1: [],
        col2: [],
        imgList: []
  }; // 页面所需数据均需在这里声明，可用于模板数据绑定

  methods = {
        onImageLoad(e) {
          // console.log('ww')
        let imageId = e.currentTarget.id;
        let oImgW = e.detail.width;         //图片原始宽度
        let oImgH = e.detail.height;        //图片原始高度
        let imgWidth = this.imgWidth;  //图片设置的宽度
        let scale = imgWidth / oImgW;        //比例计算
        let imgHeight = oImgH * scale;      //自适应高度
        console.log(images)
        let images = this.images;
        let imageObj = {};

        for (let i = 0; i < images.length; i++) {
            let img = images[i];
            if (img.id === imageId) {
                imageObj = img;
                break;
            }
        }

        imageObj.height = imgHeight;

        let loadingCount = this.loadingCount - 1;
        let col1 = this.col1;
        let col2 = this.col2;

        if (col1H <= col2H) {
            col1H += imgHeight;
            this.col1.push(imageObj);
        } else {
            col2H += imgHeight;
            this.col2.push(imageObj);
        }

        let data = {
            loadingCount: loadingCount,
            col1: col1,
            col2: col2
        };

        if (!loadingCount) {
            this.images = [];
        }

        // this.setData(data);
    },
    prviewImage(imgUrl){
      let self = this;
      let index = imgUrl.indexOf('?')
      let tmpInmgUrl = imgUrl.slice(0,index)
      wx.previewImage({
        current: tmpInmgUrl, // 当前显示图片的http链接
        urls:  [tmpInmgUrl]// 需要预览的图片http链接列表
      })
    }
  }; 
  loadImages() {
        let images = [

            { pic: "http://cdn.mitty.work/article1.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article2.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article3.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article1.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article2.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article3.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article1.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article2.jpg?imageView2/0/q/75|imageslim", height: 0 },
            // { pic: "http://cdn.mitty.work/article3.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article1.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article2.jpg?imageView2/0/q/75|imageslim", height: 0 },
            { pic: "http://cdn.mitty.work/article3.jpg?imageView2/0/q/75|imageslim", height: 0 },
        ];
        console.log(this.imgList)
        let baseId = "img-" + (+new Date());

        for (let i = 0; i < this.imgList.length; i++) {
            this.imgList[i].id = baseId + "-" + i;
        }
        this.loadingCount = this.imgList.length;
        this.images = this.imgList;
        this.$apply()
    }
}
</script>